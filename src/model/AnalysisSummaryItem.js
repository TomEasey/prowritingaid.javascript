/**
 * ProWritingAid API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AnalysisSummaryGraph', 'model/AnalysisSummarySubItem', 'model/SuggestionCategory'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AnalysisSummaryGraph'), require('./AnalysisSummarySubItem'), require('./SuggestionCategory'));
  } else {
    // Browser globals (root is window)
    if (!root.ProWritingAidApi) {
      root.ProWritingAidApi = {};
    }
    root.ProWritingAidApi.AnalysisSummaryItem = factory(root.ProWritingAidApi.ApiClient, root.ProWritingAidApi.AnalysisSummaryGraph, root.ProWritingAidApi.AnalysisSummarySubItem, root.ProWritingAidApi.SuggestionCategory);
  }
}(this, function(ApiClient, AnalysisSummaryGraph, AnalysisSummarySubItem, SuggestionCategory) {
  'use strict';




  /**
   * The AnalysisSummaryItem model module.
   * @module model/AnalysisSummaryItem
   * @version v1
   */

  /**
   * Constructs a new <code>AnalysisSummaryItem</code>.
   * @alias module:model/AnalysisSummaryItem
   * @class
   */
  var exports = function() {
    var _this = this;










  };

  /**
   * Constructs a <code>AnalysisSummaryItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AnalysisSummaryItem} obj Optional instance to populate.
   * @return {module:model/AnalysisSummaryItem} The populated <code>AnalysisSummaryItem</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Text')) {
        obj['Text'] = ApiClient.convertToType(data['Text'], 'String');
      }
      if (data.hasOwnProperty('Graph')) {
        obj['Graph'] = AnalysisSummaryGraph.constructFromObject(data['Graph']);
      }
      if (data.hasOwnProperty('Url')) {
        obj['Url'] = ApiClient.convertToType(data['Url'], 'String');
      }
      if (data.hasOwnProperty('UrlText')) {
        obj['UrlText'] = ApiClient.convertToType(data['UrlText'], 'String');
      }
      if (data.hasOwnProperty('SubItems')) {
        obj['SubItems'] = ApiClient.convertToType(data['SubItems'], [AnalysisSummarySubItem]);
      }
      if (data.hasOwnProperty('IsPositive')) {
        obj['IsPositive'] = ApiClient.convertToType(data['IsPositive'], 'String');
      }
      if (data.hasOwnProperty('Category')) {
        obj['Category'] = SuggestionCategory.constructFromObject(data['Category']);
      }
      if (data.hasOwnProperty('CategoryName')) {
        obj['CategoryName'] = ApiClient.convertToType(data['CategoryName'], 'String');
      }
      if (data.hasOwnProperty('NumIssues')) {
        obj['NumIssues'] = ApiClient.convertToType(data['NumIssues'], 'Integer');
      }
    }
    return obj;
  }

  /**
   * @member {String} Text
   */
  exports.prototype['Text'] = undefined;
  /**
   * @member {module:model/AnalysisSummaryGraph} Graph
   */
  exports.prototype['Graph'] = undefined;
  /**
   * @member {String} Url
   */
  exports.prototype['Url'] = undefined;
  /**
   * @member {String} UrlText
   */
  exports.prototype['UrlText'] = undefined;
  /**
   * @member {Array.<module:model/AnalysisSummarySubItem>} SubItems
   */
  exports.prototype['SubItems'] = undefined;
  /**
   * @member {module:model/AnalysisSummaryItem.IsPositiveEnum} IsPositive
   */
  exports.prototype['IsPositive'] = undefined;
  /**
   * @member {module:model/SuggestionCategory} Category
   */
  exports.prototype['Category'] = undefined;
  /**
   * @member {String} CategoryName
   */
  exports.prototype['CategoryName'] = undefined;
  /**
   * @member {Integer} NumIssues
   */
  exports.prototype['NumIssues'] = undefined;


  /**
   * Allowed values for the <code>IsPositive</code> property.
   * @enum {String}
   * @readonly
   */
  exports.IsPositiveEnum = {
    /**
     * value: "Positive"
     * @const
     */
    "Positive": "Positive",
    /**
     * value: "Negative"
     * @const
     */
    "Negative": "Negative",
    /**
     * value: "Information"
     * @const
     */
    "Information": "Information"  };


  return exports;
}));


